{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "_KAa5b7QTumJ"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import scipy.stats as stats\n",
        "import numpy as np\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sample_data = [1.13, 1.55, 1.43, 0.92, 1.25, 1.36, 1.32, 0.85, 1.07, 1.48, 1.20, .33, 1.18, 1.22, 1.29]"
      ],
      "metadata": {
        "id": "tMUWh02dT6bl"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sample_mean = np.mean(sample_data)\n",
        "sample_std = np.std(sample_data, ddof=1)\n",
        "sample_size = len(sample_data)"
      ],
      "metadata": {
        "id": "jOUC70i1UMzg"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "lM3H7vJBWkt6"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "confidence_level = 0.95\n",
        "degree_of_freedom = sample_size - 1\n",
        "t_score = stats.t.ppf((1 + confidence_level) / 2, degree_of_freedom)"
      ],
      "metadata": {
        "id": "mYHp4tU_UqjA"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "margin_of_error = t_score * (sample_std / np.sqrt(sample_size))"
      ],
      "metadata": {
        "id": "Vuz5VzCaWa7Y"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Confidence_level_ =(sample_mean - margin_of_error, sample_mean + margin_of_error)\n",
        "print(\"99% Confidence Interval (Sample Std):\",\n",
        "      Confidence_level_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DCR1bc5vWnut",
        "outputId": "b82198b2-5a7b-4db7-a099-603b9912d14b"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "99% Confidence Interval (Sample Std): (1.0050080704292106, 1.3389919295707893)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "qVLbsglMXSP2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy.stats as stats\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "FpAqsz6NYPX3"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sample_data = [1.13, 1.55, 1.43, 0.92, 1.25, 1.36, 1.32, 0.85, 1.07, 1.48, 1.20, .33, 1.18, 1.22, 1.29]"
      ],
      "metadata": {
        "id": "To6znwA3Yr9X"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "n = len(sample_data) #Sample size\n",
        "s = np.std(sample_data, ddof=1) #Sample standard deviation\n"
      ],
      "metadata": {
        "id": "44aYsnZjxxtj"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "alpha =1 -0.99 #Siginificance level\n",
        "lower_chi2 = stats.chi2.ppf(alpha/2, df=n -1)\n",
        "upper_chi2 = stats.chi2.ppf(1 - alpha/2, df=n - 1)"
      ],
      "metadata": {
        "id": "WFfetfmNyvNk"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lower_bound =np.sqrt((n-1)* s**2 / upper_chi2)\n",
        "upper_bound = np.sqrt((n-1)* s**2 / lower_chi2)"
      ],
      "metadata": {
        "id": "R_-dLN7ly71S"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"99%Confidence Interval for Population Standard Deviation: ({lower_bound:.4f}, {upper_bound:.4f})\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SDKHq4BQzZzc",
        "outputId": "a0133515-f94a-4c60-c289-3e0894c0ce21"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "99%Confidence Interval for Population Standard Deviation: (0.2016, 0.5590)\n"
          ]
        }
      ]
    }
  ]
}
